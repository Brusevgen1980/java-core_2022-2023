Index: src/lr2/Example2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr2/Example2.java b/src/lr2/Example2.java
new file mode 100644
--- /dev/null	(date 1673796696030)
+++ b/src/lr2/Example2.java	(date 1673796696030)
@@ -0,0 +1,24 @@
+package lr2;
+import java.util.Scanner;
+class Example2 {
+    public static void main(String[] args) {
+        Scanner in = new Scanner(System.in);
+        int x = in.nextInt();
+        int result1 = x % 5;
+        int result2 = x % 7;
+        if (result1 == 2) {
+            System.out.println("Делится на 5 с остатком 2");
+        }else if (result1 == 0){
+            System.out.println("Делится на 5 без остатка");
+        } else {
+            System.out.println("Делится на 5 с другим остатком");
+        }
+        if (result2 == 1){
+            System.out.println("Делится на 7 с остатком 1");
+        } else if (result2 == 0){
+            System.out.println("Делится на 7 без остатка");
+        }  else  {
+            System.out.println("Делится на 7 с другим остатком");
+        }
+    }
+}
Index: src/lr2/Example4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr2/Example4.java b/src/lr2/Example4.java
new file mode 100644
--- /dev/null	(date 1673796584836)
+++ b/src/lr2/Example4.java	(date 1673796584836)
@@ -0,0 +1,13 @@
+package lr2;
+import java.util.Scanner;
+public class Example4 {
+    public static void main(String[] args) {
+        Scanner in = new Scanner(System.in);
+        int a = in.nextInt();
+        if (a>=5 && a<=10) {
+            System.out.println("Число подходит");
+        } else {
+            System.out.println("Не подходит");
+        }
+    }
+}
\ No newline at end of file
Index: src/lr3/Example2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr3/Example2.java b/src/lr3/Example2.java
new file mode 100644
--- /dev/null	(date 1672769092708)
+++ b/src/lr3/Example2.java	(date 1672769092708)
@@ -0,0 +1,64 @@
+package lr3;
+import java.util.Objects;
+import java.util.Scanner;
+
+public class Example2 {
+    public static void main(String[] args) {
+        Scanner in = new Scanner(System.in);
+        System.out.println("Введите названия дня недели");
+        String day = in.nextLine();
+
+        switch (day) {
+            case "понедельник":
+                System.out.println("switch | 1");
+                break;
+            case "вторник":
+                System.out.println("switch | 2");
+                break;
+            case "среда":
+                System.out.println("switch | 3");
+                break;
+            case "четверг":
+                System.out.println("switch | 4");
+                break;
+            case "пятница":
+                System.out.println("switch | 5");
+                break;
+            case "суббота":
+                System.out.println("switch | 6");
+                break;
+            case "воскресенье":
+                System.out.println("switch | 7");
+                break;
+            default:
+                System.out.println("switch | что то не то");
+        }
+        if (day.equals("понедельник") || day.equals("вторник") || day.equals("среда") || day.equals("четверг") || day.equals("пятница") ||
+                day.equals("суббота") || day.equals("воскресенье")) {
+            if (day.equals("понедельник")) {
+                System.out.println("if |" + 1);
+            }
+            if (day.equals("вторник")) {
+                System.out.println("if |" + 2);
+            }
+            if (day.equals("среда")) {
+                System.out.println("if |" + 3);
+            }
+            if (day.equals("четверг")) {
+                System.out.println("if |" + 4);
+            }
+            if (day.equals("пятница")) {
+                System.out.println("if |" + 5);
+            }
+            if (day.equals("суббота")) {
+                System.out.println("if |" + 6);
+            }
+            if (day.equals("воскресенье")) {
+                System.out.println("if |" + 7);
+            }
+        } else {
+            System.out.println("if | что-то не то");
+        }
+
+    }
+}
Index: src/lr2/Example3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr2/Example3.java b/src/lr2/Example3.java
new file mode 100644
--- /dev/null	(date 1673796645484)
+++ b/src/lr2/Example3.java	(date 1673796645484)
@@ -0,0 +1,14 @@
+package lr2;
+import java.util.Scanner;
+public class Example3 {
+    public static void main(String[] args) {
+        Scanner in = new Scanner(System.in);
+        int a = in.nextInt();
+        int res1 = a % 4;
+        if (res1 != 0 || a <= 10) {
+            System.out.println("Число не подходит");
+        } else {
+            System.out.println("Число подходит");
+        }
+    }
+}
Index: src/lr3/Example1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr3/Example1.java b/src/lr3/Example1.java
new file mode 100644
--- /dev/null	(date 1672768948943)
+++ b/src/lr3/Example1.java	(date 1672768948943)
@@ -0,0 +1,41 @@
+package lr3;
+
+import java.util.Scanner;
+
+public class Example1 {
+    public static void main(String[] args) {
+
+        Scanner in = new Scanner(System.in);
+
+        System.out.println("Введите число");
+
+        int dayweek = in.nextInt();
+
+        switch (dayweek) {
+            case 1:
+                System.out.println("Понедельник");
+                break;
+            case 2:
+                System.out.println("Вторник");
+                break;
+            case 3:
+                System.out.println("Среда");
+                break;
+            case 4:
+                System.out.println("Четверг");
+                break;
+            case 5:
+                System.out.println("Пятница");
+                break;
+            case 6:
+                System.out.println("Суббота");
+                break;
+            case 7:
+                System.out.println("Воскресенье");
+                break;
+            default:
+                System.out.println("Введите число от 1 до 7");
+        }
+    }
+}
+
Index: src/lr3/Example4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr3/Example4.java b/src/lr3/Example4.java
new file mode 100644
--- /dev/null	(date 1672769487609)
+++ b/src/lr3/Example4.java	(date 1672769487609)
@@ -0,0 +1,19 @@
+package lr3;
+import java.util.Scanner;
+public class Example4 {
+    public static void main(String[] args) {
+        Scanner in = new Scanner(System.in);
+        System.out.println("Введите 1-ое число");
+        int a = in.nextInt();
+        System.out.println("Введите 2-ое число");
+        int b = in.nextInt();
+
+        for (int i = a; i<=b; i++){
+            System.out.println("for " + i);
+        }
+        while (a<=b) {
+            System.out.println("while " + a);
+            a++;
+        }
+    }
+}
Index: src/lr2/Example5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr2/Example5.java b/src/lr2/Example5.java
new file mode 100644
--- /dev/null	(date 1673796277546)
+++ b/src/lr2/Example5.java	(date 1673796277546)
@@ -0,0 +1,22 @@
+package lr2;
+import java.util.Scanner;
+public class Example5 {
+    public static void main(String[] args) {
+        Scanner in = new Scanner(System.in);
+
+        System.out.println("Определим сколько тысяч в веденном числе \n" +
+                "Например: в числе 123456 - 4 тысячи, а в числе 100000 4 цифра справа 0, значит и тысяч 0) \n" +
+                "Введите какое-то число: ");
+
+        double a = in.nextDouble();
+        double b = 1000;
+        // Возвожу в квадрат, а затем получаю корень для того что бы избавить от отрицательного введенного числа
+        if ( Math.sqrt(a*a) < b ){
+            System.out.println(a + " в данном числе нет даже одной тысячи");
+        }
+        else {
+            int c = (int) ((Math.sqrt(a*a)/b)%10);
+            System.out.printf("В числе: %s, %s тысяч(и).", a, c);
+        }
+    }
+}
Index: src/lr3/Example3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr3/Example3.java b/src/lr3/Example3.java
new file mode 100644
--- /dev/null	(date 1672769329873)
+++ b/src/lr3/Example3.java	(date 1672769329873)
@@ -0,0 +1,33 @@
+package lr3;
+
+import java.util.Scanner;
+
+public class Example3 {
+    public static void main(String[] args) {
+        Scanner in = new Scanner(System.in);
+        System.out.println("Введите сколько чисел суммировать");
+        int x = in.nextInt();
+        int[] fibb = new int[x];
+        int o = 2;
+        int z = 2;
+        fibb[0] = 0;
+        fibb[1] = 1;
+
+        while (o < fibb.length) {
+            fibb[o] = fibb[o - 1] + fibb[o - 2];
+            //  System.out.println("while " + fibb[o]);
+            o++;
+        }
+        while (z-1<fibb.length) {
+            System.out.println( "while "+ fibb[z-1]);
+            z++;
+        }
+        for (int i = 2; i < fibb.length; ++i) {
+            fibb[i] = fibb[i - 1] + fibb[i - 2];
+        }
+        for (int e = 1; e < fibb.length; ++e) {
+            System.out.println("for " + fibb[e]);
+        }
+    }
+}
+
Index: src/lr3/Example6.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr3/Example6.java b/src/lr3/Example6.java
new file mode 100644
--- /dev/null	(date 1672769704290)
+++ b/src/lr3/Example6.java	(date 1672769704290)
@@ -0,0 +1,34 @@
+package lr3;
+import java.util.Arrays;
+import java.util.Random;
+import java.util.Scanner;
+
+public class Example6 {
+    public static void main(String[] args) {
+
+        Scanner in = new Scanner(System.in);
+
+        System.out.println("Введите размер массива");
+
+        int size = in.nextInt();
+        if (size > 0) {
+            Random random = new Random();
+            int[] ints = new int[size];
+
+            for (int i = 0; i < ints.length; i++) {
+                boolean iterator = true;
+                int x = 0;
+                while (iterator) {
+                    x = random.nextInt(100);
+                    if (x % 5 == 2) {
+                        iterator = false;
+                    }
+                }
+                ints[i] = x;
+            }
+            System.out.println(Arrays.toString(ints));
+        } else {
+            System.out.println("Введено некорреткное значение");
+        }
+    }
+}
Index: src/lr3/Example5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr3/Example5.java b/src/lr3/Example5.java
new file mode 100644
--- /dev/null	(date 1672769593595)
+++ b/src/lr3/Example5.java	(date 1672769593595)
@@ -0,0 +1,22 @@
+package lr3;
+import java.util.Scanner;
+
+public class Example5 {
+    public static void main(String[] args) {
+        Scanner in = new Scanner(System.in);
+        System.out.println("Сколько чисел суммровать?");
+        int x = in.nextInt();
+        int n = 0;
+        int count = 0;
+        int sum = 0;
+        while (count < x) {
+            if (n % 5 == 2 || n % 3 == 1) {
+                count++;
+                sum += n;
+                System.out.print(n + "+");
+            }
+            n++;
+        }
+        System.out.println("=" + sum);
+    }
+}
Index: src/lr3/Example8.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr3/Example8.java b/src/lr3/Example8.java
new file mode 100644
--- /dev/null	(date 1672769894165)
+++ b/src/lr3/Example8.java	(date 1672769894165)
@@ -0,0 +1,22 @@
+package lr3;
+import java.util.Scanner;
+
+public class Example8 {
+    public static void main(String[] args) {
+
+        char mainmass[] = new char[10];
+        char i = 'A';
+        char massglas [] = {'A', 'E', 'I'};
+        for (int x = 0; x < mainmass.length; i++)
+        {
+            for (int y = 0; y < massglas.length; y++) {
+                if (i == massglas[y]) {
+                    i++;
+                }
+            }
+            mainmass[x] = i;
+            System.out.println("Элемент массива ["+x+"] = " + mainmass[x]);
+            x++;
+        }
+    }
+}
\ No newline at end of file
Index: src/lr3/Example7.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr3/Example7.java b/src/lr3/Example7.java
new file mode 100644
--- /dev/null	(date 1672769806666)
+++ b/src/lr3/Example7.java	(date 1672769806666)
@@ -0,0 +1,18 @@
+package lr3;
+
+import java.util.Scanner;
+
+public class Example7 {
+    public static void main(String[] args) {
+        Scanner in = new Scanner(System.in);
+        System.out.println("Размер массива ");
+        int size = in.nextInt();
+        char a = 'a';
+        char[] mass = new char[size];
+        for (char i = 0; i < mass.length; i++) {
+            mass[i] = a++;
+            a++;
+            System.out.println(mass[i]);
+        }
+    }
+}
Index: src/lr3/Example10.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr3/Example10.java b/src/lr3/Example10.java
new file mode 100644
--- /dev/null	(date 1673797900503)
+++ b/src/lr3/Example10.java	(date 1673797900503)
@@ -0,0 +1,29 @@
+package lr3;
+
+import java.util.*;
+
+public class Example10 {
+    public static void main(String[] args) {
+        Scanner in = new Scanner(System.in);
+        System.out.println("Размер массива");
+        int size = in.nextInt();
+        int[] massiv = new int[size];
+        Random random = new Random();
+        for (int i = 0; i < massiv.length; i++) {
+            massiv[i] = random.nextInt(100);
+        }
+        Arrays.sort(massiv);
+        for(int i = massiv.length; i >= 0; i--){
+            for(int x = 0; x < i-1; x++){
+                if (massiv[x] < massiv[x+1]){
+                    int tmp = massiv[x];
+                    massiv[x] = massiv[x+1];
+                    massiv[x+1] = tmp;
+                }
+            }
+        }
+        for(int i = 0; i<massiv.length; i++)
+            System.out.println(massiv[i]);
+
+    }
+}
\ No newline at end of file
Index: src/lr3/Example9.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr3/Example9.java b/src/lr3/Example9.java
new file mode 100644
--- /dev/null	(date 1672770014927)
+++ b/src/lr3/Example9.java	(date 1672770014927)
@@ -0,0 +1,25 @@
+package lr3;
+import java.util.Arrays;
+import java.util.Random;
+import java.util.Scanner;
+
+public class Example9 {
+    public static void main(String[] args) {
+        Scanner id = new Scanner(System.in);
+        System.out.println("Введите размер массива");
+        int size = id.nextInt();
+        System.out.println("Размер массива равен " + size);
+        int[] nums = new int[size];
+        Random random = new Random();
+
+        for (int i = 0 ; i < nums.length ; i++){
+            nums[i] = random.nextInt(200);
+            System.out.println("Элемент массива ["+i+"] = " + nums[i]);
+        }
+        Arrays.sort(nums);
+        System.out.println("Произведена сортировка массива");
+        for (int i = 0; i < nums.length; i++){
+            System.out.println("Элемент массива ["+i+"] после сортировки = " + nums[i]);
+        }
+    }
+}
Index: src/timus/task1000/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/timus/task1000/Main.java b/src/timus/task1000/Main.java
new file mode 100644
--- /dev/null	(date 1672768511888)
+++ b/src/timus/task1000/Main.java	(date 1672768511888)
@@ -0,0 +1,12 @@
+package timus.task1000;
+import java.util.Scanner;
+
+public class Main {
+    public static void main(String[] args)
+    {
+        Scanner in = new Scanner(System.in);
+        int a = in.nextInt();
+        int b = in.nextInt();
+        System.out.println(a+b);
+    }
+}
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1673797754621)
+++ b/.idea/compiler.xml	(date 1673797754621)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="java-core_2022-2023" options="--add-exports java.base/java=ALL-UNNAMED" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1672065862531)
+++ b/.idea/uiDesigner.xml	(date 1672065862531)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: src/lr4/Example1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr4/Example1.java b/src/lr4/Example1.java
new file mode 100644
--- /dev/null	(date 1673799243354)
+++ b/src/lr4/Example1.java	(date 1673799243354)
@@ -0,0 +1,20 @@
+package lr4;
+public class Example1 {
+    public static void main(String[] args) {
+        int width, height, numSym;
+        width = 23;
+        height = 11;
+        for (int i = 1; i <= height; i++){
+            if (i / 10 != 1) {
+                System.out.print("Номер строки:  " + i + " ");
+            }
+            else System.out.print("Номер строки: " + i + " ");
+            numSym = 0;
+            for (int j = 1; j <= width; j++){
+                System.out.print("+");
+                numSym = numSym + 1;
+            }
+            System.out.println(" Количество символов в строке: " + numSym);
+        }
+    }
+}
\ No newline at end of file
Index: src/lr4/Example5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr4/Example5.java b/src/lr4/Example5.java
new file mode 100644
--- /dev/null	(date 1673799777836)
+++ b/src/lr4/Example5.java	(date 1673799777836)
@@ -0,0 +1,37 @@
+package lr4;
+import java.util.Arrays;
+import java.util.Random;
+
+public class Example5 {
+    public static void main(String[] args) {
+        Random random = new Random();
+        int i = 5;
+        int j = 3;
+        int[][] array1 = new int[i][j];
+        int[][] array2 = new int[j][i];
+        for (int x = 0; x < array1.length; x++) {
+            for (int y = 0; y < j; y++) {
+                array1[x][y] = random.nextInt(10);
+            }
+        }
+        System.out.println("массив до транспонирования");
+        for (int x = 0; x < i; x++) {
+            for (int y = 0; y < j; y++) {
+                System.out.print(array1[x][y] + " ");
+            }
+            System.out.println();
+        }
+        for (int x = 0; x < j; x++) {
+            for (int y = 0; y < i; y++) {
+                array2[x][y] = array1[y][x];
+            }
+        }
+        System.out.println("после транспонирования");
+        for (int x = 0; x < j; x++) {
+            for (int y = 0; y < i; y++) {
+                System.out.print(array2[x][y] + " ");
+            }
+            System.out.println();
+        }
+    }
+}
Index: src/lr4/Example2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr4/Example2.java b/src/lr4/Example2.java
new file mode 100644
--- /dev/null	(date 1673799438886)
+++ b/src/lr4/Example2.java	(date 1673799438886)
@@ -0,0 +1,12 @@
+package lr4;
+public class Example2 {
+    public static void main(String[] args) {
+    int figure = 10;
+    for(int i = 0; i<figure;i++) {
+        for(int y = i; y<=figure; y++){
+            System.out.print("+");
+        }
+        System.out.println();
+    }
+  }
+}
Index: src/lr4/Example3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr4/Example3.java b/src/lr4/Example3.java
new file mode 100644
--- /dev/null	(date 1673799680342)
+++ b/src/lr4/Example3.java	(date 1673799680342)
@@ -0,0 +1,14 @@
+package lr4;
+
+public class Example3 {   public static void main(String[] args) {
+    int [][] arrayTwos = new int [7][15];
+    for(int i=0; i<7;i++){
+        for(int j=0; j<15;j++){
+            arrayTwos[i][j] = 2;
+            System.out.print(arrayTwos[i][j]);
+        }
+        System.out.println();
+    }
+  }
+}
+
Index: src/lr2/Example1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr2/Example1.java b/src/lr2/Example1.java
new file mode 100644
--- /dev/null	(date 1672327099641)
+++ b/src/lr2/Example1.java	(date 1672327099641)
@@ -0,0 +1,16 @@
+package lr2;
+import java.util.Scanner;
+public class Example1 {
+    public static void main(String[] args) {
+        Scanner in = new Scanner(System.in);
+System.out.println("Введите любое целое число");
+        int x = in.nextInt();
+        int result = x % 3;
+        if  (result == 0){
+            System.out.println("Введенное число делится на три без остатка");
+        } else {
+            System.out.println("Введенное число не делится на три без остатка");
+        }
+    }
+}
+
Index: src/lr4/Example4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr4/Example4.java b/src/lr4/Example4.java
new file mode 100644
--- /dev/null	(date 1673799567371)
+++ b/src/lr4/Example4.java	(date 1673799567371)
@@ -0,0 +1,17 @@
+package lr4;
+public class Example4 {    public static void main(String[] args) {
+    String[][] arrayTwos = new String[5][5];
+    for(int i=0; i<5;i++) {
+        for (int j = 0; j < 5; j++) {
+            arrayTwos[i][j] = "+";
+        }
+    }
+    for(int i=0;i<5;i++){
+        for(int y=i; y<5; y++){
+            System.out.print(arrayTwos[i][y]);
+        }
+        System.out.println();
+    }
+  }
+}
+
Index: src/lr4/Example7.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr4/Example7.java b/src/lr4/Example7.java
new file mode 100644
--- /dev/null	(date 1673800013492)
+++ b/src/lr4/Example7.java	(date 1673800013492)
@@ -0,0 +1,36 @@
+package lr4;
+import java.util.Scanner;
+
+public class Example7 {
+    public static void main(String[] args) {
+
+        int snake[][] = new int[10][10];
+        int tail = 0;
+        int body = 0;
+        int h = 0;
+        for (int i = 0 ; h <snake.length ; h++) {
+            for (int j = 0 ; j <(snake[i].length - tail); j++) {
+                snake[i][j] = body;
+                body++;
+            }
+            i++;
+            for (int k = i; k <snake.length; k++) {
+                snake[k][snake[i].length-1-tail] = body;
+                body++;
+            }
+            tail++;
+        }
+        int z = 0;
+        for (int i =0; i < snake.length; i++){
+            int count = i+1;
+            System.out.print("номер строки " + count + " : ");
+            for (int j = 0; j <snake[i].length; j++){
+                System.out.print(snake[i][j]+" ");
+                z++;
+            }
+            System.out.println(" Количество символов в строке " + z);
+            z = 0;
+        }
+
+    }
+}
\ No newline at end of file
Index: src/lr4/Example6.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr4/Example6.java b/src/lr4/Example6.java
new file mode 100644
--- /dev/null	(date 1673799902123)
+++ b/src/lr4/Example6.java	(date 1673799902123)
@@ -0,0 +1,52 @@
+package lr4;
+import java.util.Random;
+
+public class Example6 {
+    public static void main(String[] args) {
+        Random random = new Random();
+        int x = 10;
+        int y = 10;
+        int array1[][] = new int[x][y];
+        int body = 0;
+        for (int i = 0; i < array1.length; i++) {
+            for (int j = 0; j < array1.length; j++) {
+                array1[i][j] = body;
+                body++;
+            }
+        }
+        for (int i = 0; i < x; i++) {
+            for (int j = 0; j < y; j++) {
+                System.out.print(array1[i][j] + " ");
+            }
+            System.out.println();
+        }
+        System.out.println();
+        int row = random.nextInt(x-1);
+        int collumn =random.nextInt(y-1);
+        int array2[][] = new int[x-1][y-1];
+        System.out.println("строка к удалению "+row);
+        System.out.println("столбец к удалению "+ collumn);
+        System.out.println();
+
+        for( int i = 0, z=0; i<x-1 ;z++){
+            if(z!=row){
+                for(int j = 0,q = 0; j<y-1;q++){
+                    if(q!=collumn){
+                        array2[i][j] = array1[z][q];
+                        j++;
+                    }
+                }
+                i++;
+            }
+
+        }
+        for (int i = 0; i < x-1; i++) {
+            for (int j = 0; j < y-1; j++) {
+                System.out.print(array2[i][j] + " ");
+            }
+            System.out.println();
+        }
+
+    }
+
+}
Index: src/lr4/Example8.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr4/Example8.java b/src/lr4/Example8.java
new file mode 100644
--- /dev/null	(date 1673800361597)
+++ b/src/lr4/Example8.java	(date 1673800361597)
@@ -0,0 +1,60 @@
+package lr4;
+import java.util.Arrays;
+import java.util.Scanner;
+public class Example8 {
+    private static class Ceaser {
+        static String encrTxt;
+        private static String encrypt(String enText, int key) {
+            char[] ArrayTxt = enText.toCharArray();
+            int[] ints = new int[ArrayTxt.length];
+            for (int i = 0; i < ArrayTxt.length; i++) {
+                ints[i] = ArrayTxt[i];
+                ints[i] = ints[i] + key;
+            }
+            for (int i = 0; i < ArrayTxt.length; i++) {
+                ArrayTxt[i] = (char) ints[i];
+            }
+            encrTxt = new String(ArrayTxt);
+            return encrTxt;
+        }
+        private static String decrypt(String enText, int key) {
+            char[] ArrayTxt = enText.toCharArray();
+            int[] ints = new int[ArrayTxt.length];
+            for (int i = 0; i < ArrayTxt.length; i++) {
+                ints[i] = ArrayTxt[i];
+                ints[i] = ints[i] - key;
+            }
+            for (int i = 0; i < ArrayTxt.length; i++) {
+                ArrayTxt[i] = (char) ints[i];
+            }
+            encrTxt = new String(ArrayTxt);
+            return encrTxt;
+        }
+    }
+    public static void main(String[] args) {
+        Scanner in = new Scanner(System.in);
+        System.out.println("Введите текст для шифрования");
+        String value = in.nextLine();
+
+        System.out.println("Введите ключ для шифрования");
+        int key = in.nextInt();
+        String encryptStr = Ceaser.encrypt(value, key);
+        System.out.println("Текст после проеобразования :" + encryptStr);
+        System.out.println("Выполнить обратное проеобразовани? (y/n)");
+        boolean iterator = false;
+        while (!iterator) {
+            String usanswer = in.next();
+            if (usanswer.toLowerCase().equals("y")) {
+                String decryptStr = Ceaser.decrypt(encryptStr, key);
+                System.out.println(decryptStr);
+                iterator = true;
+            } else if (usanswer.toLowerCase().equals("n")) {
+                System.out.println("До свидания!");
+                iterator = true;
+            } else {
+                System.out.println("Введите корректный ответ");
+                iterator = false;
+            }
+        }
+    }
+}
Index: src/lr5/Example1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr5/Example1.java b/src/lr5/Example1.java
new file mode 100644
--- /dev/null	(date 1673801395189)
+++ b/src/lr5/Example1.java	(date 1673801395189)
@@ -0,0 +1,27 @@
+package lr5;
+public class Example1 {
+    public static void main(String[] args) {
+            lab1 test1 = new lab1();
+
+            test1.setCh1('K');
+            System.out.println("getCodeSymbol " + test1.getCodeSymbol());
+            test1.showCodeAndValue();
+
+
+        }
+    }
+    class lab1 {
+        private char ch1;
+
+        public void setCh1(char ch1) {
+            this.ch1 = ch1;
+        }
+
+        public int getCodeSymbol(){
+            return ch1;
+        }
+        public void showCodeAndValue() {
+            System.out.println("Value = " + ch1);
+            System.out.println("Code = " + (int) ch1);
+        }
+}
\ No newline at end of file
Index: src/lr5/Example3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr5/Example3.java b/src/lr5/Example3.java
new file mode 100644
--- /dev/null	(date 1673802154561)
+++ b/src/lr5/Example3.java	(date 1673802154561)
@@ -0,0 +1,34 @@
+package lr5;
+public class Example3 {
+        public static void main(String[] args) {
+            Lab3 test3 = new Lab3(2,5);
+            test3.konstr2();
+            Lab3 test4 = new Lab3(3);
+            test4.konstr1();
+            Lab3 test5 = new Lab3();
+            test5.zerokonstr();
+        }
+ }
+ class Lab3 {
+        int a;
+        int b;
+        public Lab3(int a, int b) {
+            this.a = a;
+            this.b = b;
+
+        }
+        public Lab3(int a) {
+            this.a = a;
+        }
+        public Lab3() {
+        }
+        public void zerokonstr() {
+            System.out.println("Пустой конструкт " + a + " + " + b);
+        }
+        public void konstr1() {
+            System.out.println("Конструкт с одним аргументом " + a + " + " + b);
+        }
+        public void konstr2() {
+            System.out.println("Конструкт с двумя аргументами " + a + " + " + b);
+        }
+    }
Index: src/lr5/Exemple2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr5/Exemple2.java b/src/lr5/Exemple2.java
new file mode 100644
--- /dev/null	(date 1673801591308)
+++ b/src/lr5/Exemple2.java	(date 1673801591308)
@@ -0,0 +1,33 @@
+package lr5;
+
+public class Exemple2 {    public static void main(String[] args) {
+    Lab2 test1 = new Lab2();
+
+    test1.setCh1('A');
+    test1.setCh2('Z');
+
+    test1.showChar();
+}
+}
+class Lab2 {
+    private char ch1;
+    private char ch2;
+    public void setCh1(char ch1) {
+        this.ch1 = ch1;
+    }public void setCh2(char ch2) {
+        this.ch2 = ch2;
+    }public void showChar(){
+        int int1 = ch1;
+        int int2 = ch2;
+        if (ch1 > ch2) {
+            int1 = ch2;
+            int2 = ch2;
+        }
+        int schet = 1;
+        for (int i = int1; i <= int2; i++) {
+            System.out.println(schet + " symbol = " + (char) i);
+            schet++;
+        }
+    }
+}
+
Index: src/lr5/Example5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr5/Example5.java b/src/lr5/Example5.java
new file mode 100644
--- /dev/null	(date 1673804480722)
+++ b/src/lr5/Example5.java	(date 1673804480722)
@@ -0,0 +1,41 @@
+package lr5;
+
+public class Example5 {   public static void main(String[] args) {
+    Lab5 test05 = new Lab5(20);
+    System.out.println("Число "+ test05.Check());
+
+    test05.setA(15);
+    System.out.println("Число "+ test05.Check());
+    test05.setA(125);
+    System.out.println("Число "+ test05.Check());
+    test05.setA(-50);
+    System.out.println("Число "+ test05.Check());
+    test05.setA();
+    System.out.println("Число "+ test05.Check());
+}
+
+}
+ class Lab5 {
+    private int a;
+
+    public void setA(int x) {
+        a = x;
+        if ( x >= 100){
+            a = 100;
+        }
+        if (x <= 0){
+            a = 0;
+        }
+    }
+    public void setA(){
+        a = 0;
+    }
+    public int Check(){
+        return a;
+    }
+    Lab5(int a){
+        this.setA(a);
+    }
+
+
+}
Index: src/lr5/Example4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/lr5/Example4.java b/src/lr5/Example4.java
new file mode 100644
--- /dev/null	(date 1673805517939)
+++ b/src/lr5/Example4.java	(date 1673805517939)
@@ -0,0 +1,35 @@
+package lr5;
+import java.util.Scanner;
+public class Example4 {
+    public static void main(String[] args) {
+        Lab4 test1 = new Lab4(34, 'S');
+        test1.echo();
+        Lab4 test2 = new Lab4(65.1267);
+        test2.echo2();
+
+    }
+
+    class Lab4 {
+        char a;
+        int b;
+
+        public Lab4(int x, char c) {
+            a = c;
+            b = x;
+        }
+
+        public void echo() {
+            System.out.println("Первый аргумент , второй буква получили " + a + " + " + b);
+
+        }
+
+        public Lab4(double d) {
+            a = (char) d;
+            b = (int) ((d - (int) d) * 100);
+        }
+
+        public void echo2() {
+            System.out.println("Дробное число определило два аргумента " + a + " " + b);
+        }
+    }
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"9822b4f4-cd9e-451d-a534-db25525ce18e\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/java-core_2022-2023.iml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example1.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example10.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example11.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example12.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example13.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example14.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example15.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example2.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example3.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example4.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example5.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example6.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example7.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example8.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/lr1/Example9.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/timus/Main.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/timus/task1293/Main.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/lr1/Example3.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/timus/Main.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/timus/task1293/Main.java\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2JSB1XmFa0TZMvEVTBiUUeoFBwp\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"Example13\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"lr1.Example13\" />\r\n      <module name=\"java-core_2022-2023\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"lr1.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Example14\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"lr1.Example14\" />\r\n      <module name=\"java-core_2022-2023\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"lr1.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Example15\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"lr1.Example15\" />\r\n      <module name=\"java-core_2022-2023\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"lr1.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"timus.task1293.Main\" />\r\n      <module name=\"java-core_2022-2023\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"timus.task1293.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"timus.main\" />\r\n      <module name=\"java-core_2022-2023\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"timus.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.main\" />\r\n        <item itemvalue=\"Application.Example15\" />\r\n        <item itemvalue=\"Application.Example14\" />\r\n        <item itemvalue=\"Application.Example13\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"9822b4f4-cd9e-451d-a534-db25525ce18e\" name=\"Changes\" comment=\"\" />\r\n      <created>1672061393678</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1672061393678</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"CUSTOM_BOOLEAN_PROPERTIES\">\r\n                <map>\r\n                  <entry key=\"Show.Git.Branches\" value=\"true\" />\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/java_core_2022_2023$Example4.ic\" NAME=\"Example4 Coverage Results\" MODIFIED=\"1672062245921\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>lr1.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 626669963496145df755ba745ac6824708ebc688)
+++ b/.idea/workspace.xml	(date 1673805518383)
@@ -4,30 +4,40 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="9822b4f4-cd9e-451d-a534-db25525ce18e" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/java-core_2022-2023.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example1.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example10.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example11.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example12.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example13.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example14.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example15.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example2.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example3.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example4.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example5.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example6.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example7.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example8.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/lr1/Example9.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/timus/Main.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/timus/task1293/Main.java" afterDir="false" />
+    <list default="true" id="9822b4f4-cd9e-451d-a534-db25525ce18e" name="Changes" comment="initial comit">
+      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr2/Example1.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr2/Example2.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr2/Example3.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr2/Example4.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr2/Example5.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr3/Example1.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr3/Example10.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr3/Example2.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr3/Example3.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr3/Example4.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr3/Example5.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr3/Example6.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr3/Example7.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr3/Example8.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr3/Example9.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr4/Example1.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr4/Example2.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr4/Example3.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr4/Example4.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr4/Example5.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr4/Example6.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr4/Example7.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr4/Example8.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr5/Example1.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr5/Example3.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr5/Example4.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr5/Example5.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/lr5/Exemple2.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/timus/task1000/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -43,10 +53,36 @@
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
+  "lastFilter": {
+    "state": "OPEN"
+  }
+}]]></component>
+  <component name="GithubPullRequestsUISettings">
+    <option name="selectedUrlAndAccountId">
+      <UrlAndAccount>
+        <option name="accountId" value="99c05d52-7681-4e92-8f4e-da0948b4a0f3" />
+        <option name="url" value="https://github.com/Brusevgen1980/java-core_2022-2023.git" />
+      </UrlAndAccount>
+    </option>
   </component>
   <component name="HighlightingSettingsPerFile">
     <setting file="file://$PROJECT_DIR$/src/lr1/Example3.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/src/lr2/Example4.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/src/lr3/Example10.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/src/lr4/Example5.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/src/lr4/Example6.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/src/lr4/Example7.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/src/lr4/Example8.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/src/lr5/Example1.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/src/lr5/Example3.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/src/lr5/Example4.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/src/lr5/Example5.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/src/lr5/Example6.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/src/lr5/Exemple2.java" root0="SKIP_INSPECTION" />
     <setting file="file://$PROJECT_DIR$/src/timus/Main.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/src/timus/task1000/Main.java" root0="SKIP_INSPECTION" />
     <setting file="file://$PROJECT_DIR$/src/timus/task1293/Main.java" root0="SKIP_INSPECTION" />
   </component>
   <component name="MarkdownSettingsMigration">
@@ -63,16 +99,18 @@
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
     "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true"
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "settings.editor.selected.configurable": "preferences.lookFeel"
   }
 }]]></component>
-  <component name="RunManager" selected="Application.Main">
-    <configuration name="Example13" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="lr1.Example13" />
+  <component name="RunManager" selected="Application.Example4">
+    <configuration name="Example3" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="lr5.Example3" />
       <module name="java-core_2022-2023" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="lr1.*" />
+          <option name="PATTERN" value="lr5.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -80,12 +118,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="Example14" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="lr1.Example14" />
+    <configuration name="Example4" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="lr5.Example4" />
       <module name="java-core_2022-2023" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="lr1.*" />
+          <option name="PATTERN" value="lr5.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -93,12 +131,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="Example15" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="lr1.Example15" />
+    <configuration name="Example5" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="lr5.Example5" />
       <module name="java-core_2022-2023" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="lr1.*" />
+          <option name="PATTERN" value="lr5.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -106,12 +144,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="timus.task1293.Main" />
+    <configuration name="Example6" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="lr5.Example6" />
       <module name="java-core_2022-2023" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="timus.task1293.*" />
+          <option name="PATTERN" value="lr5.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -119,12 +157,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="timus.main" />
+    <configuration name="Exemple2" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="lr5.Exemple2" />
       <module name="java-core_2022-2023" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="timus.*" />
+          <option name="PATTERN" value="lr5.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -134,11 +172,11 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Application.Main" />
-        <item itemvalue="Application.main" />
-        <item itemvalue="Application.Example15" />
-        <item itemvalue="Application.Example14" />
-        <item itemvalue="Application.Example13" />
+        <item itemvalue="Application.Example4" />
+        <item itemvalue="Application.Example5" />
+        <item itemvalue="Application.Example6" />
+        <item itemvalue="Application.Example3" />
+        <item itemvalue="Application.Exemple2" />
       </list>
     </recent_temporary>
   </component>
@@ -151,6 +189,14 @@
       <option name="presentableId" value="Default" />
       <updated>1672061393678</updated>
     </task>
+    <task id="LOCAL-00001" summary="initial comit">
+      <created>1672069860727</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1672069860727</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -162,6 +208,17 @@
               <option name="CUSTOM_BOOLEAN_PROPERTIES">
                 <map>
                   <entry key="Show.Git.Branches" value="true" />
+                </map>
+              </option>
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="master" />
+                      </list>
+                    </value>
+                  </entry>
                 </map>
               </option>
             </State>
@@ -169,6 +226,14 @@
         </entry>
       </map>
     </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="initial comit" />
+    <option name="LAST_COMMIT_MESSAGE" value="initial comit" />
+  </component>
+  <component name="XSLT-Support.FileAssociations.UIState">
+    <expand />
+    <select />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/java_core_2022_2023$Example4.ic" NAME="Example4 Coverage Results" MODIFIED="1672062245921" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 626669963496145df755ba745ac6824708ebc688)
+++ b/.idea/vcs.xml	(date 1672235468003)
@@ -2,5 +2,6 @@
 <project version="4">
   <component name="VcsDirectoryMappings">
     <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="$PROJECT_DIR$/src/lr1" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
